{"version":3,"sources":["../../../src/bin/run/extract.js"],"names":["LOG","getVal","val","v","test","parseInt","undefined","propExtractRe","keys","makeType","type","name","description","properties","hasProps","length","tt","d","i","repeat","t","makeP","defaultValue","optional","includes","hasDefault","def","o","ii","desc","p","writeOnce","stream","data","jj","Promise","r","j","on","write","removeListener","XML","Transform","constructor","writableObjectMode","_transform","enc","next","startsWith","makeImport","push","forEach","pType","pName","default","pDesc","f","exec","Error","from","Properties","objectMode","props","_","map","e","Default","D","opt","rest","pr","dn","extractTypedef","config","source","destination","s","ts","typedefRe","ps","readable","PassThrough","xml","pipe","end","err"],"mappings":"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","sourcesContent":["import { createReadStream } from 'fs'\nimport createRegexTransformStream from 'restream'\nimport { Transform, PassThrough } from 'stream'\nimport mismatch from 'mismatch'\nimport catcher from '../catcher'\nimport { debuglog } from 'util'\nimport typedefRe from '../../lib/typedef/re'\nimport { getNameWithDefault } from '../../lib/typedef'\nimport whichStream from './which-stream'\n\nconst LOG = debuglog('doc')\n\nconst getVal = (val) => {\n  let v\n  if (val == 'true') v = true\n  else if (val == 'false') v = false\n  else if (/^\\d+$/.test(val)) v = parseInt(val, 10)\n  return v !== undefined ? v : val\n}\n\nexport const propExtractRe = /^ \\* @prop {(.+?)} (\\[)?(.+?)(?:=([\"'])?(.+?)\\4)?(?:])?(?: (.+?))?(?: Default `(.+?)`.)?$/gm\nconst keys = ['type', 'opt', 'name', 'quote', 'defaultValue', 'description', 'Default']\n\nconst makeType = (type, name, description, properties) => {\n  const hasProps = properties.length\n  const tt = type && type != 'Object' ? ` type=\"${type}\"` : ''\n  const d = description ? ` desc=\"${description}\"` : ''\n  const i = ' '.repeat(2)\n  const t = `${i}<type name=\"${name}\"${tt}${d}${hasProps ? '' : ' /'}>\\n`\n  return t\n}\n\nconst makeP = (type, name, defaultValue, optional, description) => {\n  const t = ['string', 'number', 'boolean'].includes(type) ? ` ${type}` : ` type=\"${type}\"`\n  const hasDefault = defaultValue !== undefined\n  const def = hasDefault ? ` default=\"${defaultValue}\"` : ''\n  const o = (optional && !hasDefault) ? ' opt' : ''\n  const i = ' '.repeat(4)\n  const ii = ' '.repeat(6)\n  const desc = description ? `>\\n${ii}${description}\\n${i}</prop>` : '/>'\n  const p = `${i}<prop${o}${t} name=\"${name}\"${def}${desc}\\n`\n  return p\n}\n\nconst writeOnce = async (stream, data) => {\n  let jj\n  await new Promise((r, j) => {\n    jj = j\n    stream.on('error', jj)\n    stream.write(data, r)\n  })\n  stream.removeListener('error', jj)\n}\n\n/**\n * Writes XML.\n */\nclass XML extends Transform {\n  constructor() {\n    super({\n      writableObjectMode: true,\n    })\n  }\n  _transform({ type, name, description, properties }, enc, next) {\n    const t = type && type.startsWith('import')\n      ? makeImport(type, name)\n      : makeType(type, name, description, properties)\n    this.push(t)\n    properties.forEach(({ type: pType, name: pName, default: d, description: pDesc, optional }) => {\n      const p = makeP(pType, pName, d, optional, pDesc)\n      this.push(p)\n    })\n    if (properties.length) this.push('  </type>\\n')\n    next()\n  }\n}\n\nconst makeImport = (type, name) => {\n  const f = /import\\((['\"])(.+?)\\1\\)/.exec(type)\n  if (!f) throw new Error(`Could not extract package from \"${type}\"`)\n  const [,, from] = f\n  const i = ' '.repeat(2)\n  return `${i}<import name=\"${name}\" from=\"${from}\" />\\n`\n}\n\n/**\n * Parses properties from a RegExp stream.\n */\nclass Properties extends Transform {\n  constructor() {\n    super({\n      objectMode: true,\n    })\n  }\n  _transform([, type, name, description, props], _, next) {\n    /** @type {Object.<string, string>[]} */\n    const p = mismatch(\n      propExtractRe,\n      props,\n      keys,\n    )\n    const properties = p.map(e => {\n      const { defaultValue: d, Default: D, opt: o, ...rest } = e\n      const pr = {\n        ...rest,\n        ...(d ? { defaultValue: getVal(d) } : {}),\n        ...(D ? { Default: getVal(D) } : {}),\n        ...(o ? { optional: true } : {}),\n      }\n      if (d || D) {\n        if (!d) {\n          const dn = getNameWithDefault(pr.name, D, pr.type)\n          LOG('%s[%s] got from Default.', name, dn)\n        } else if (d !== D && pr.Default !== undefined) {\n          const dn = getNameWithDefault(pr.name, D, pr.type)\n          LOG('%s[%s] does not match Default `%s`.', name, dn, pr.Default)\n        }\n        pr.default = 'defaultValue' in pr ? pr.defaultValue : pr.Default\n        delete pr.defaultValue\n        delete pr.Default\n      }\n      return pr\n    })\n    const o = {\n      type, name, description, properties,\n    }\n    this.push(o)\n    next()\n  }\n}\n\n/**\n * Process a JavaScript file to extract typedefs and place them in an XML file.\n * @param {Config} config Configuration object.\n * @param {string} config.source Input file from which to extract typedefs.\n * @param {string} [config.destination=\"-\"] Output file to where to write XML. `-` will write to `stdout`. Default `-`.\n * @param {string} [config.stream] An output stream to which to write instead of a location from `extractTo`.\n */\nasync function extractTypedef(config) {\n  const {\n    source,\n    destination,\n    stream,\n  } = config\n  try {\n    const s = createReadStream(source)\n    const ts = createRegexTransformStream(typedefRe)\n    const ps = new Properties()\n    const readable = new PassThrough()\n    const xml = new XML()\n\n    await writeOnce(readable, '<types>\\n')\n\n    s.pipe(ts).pipe(ps).pipe(xml).pipe(readable, { end: false })\n\n    const p = whichStream({\n      readable,\n      source,\n      stream,\n      destination,\n    })\n\n    await new Promise((r, j) => {\n      s.on('error', e => { LOG('Error in Read'); j(e) })\n      ts.on('error', e => { LOG('Error in Transform'); j(e) })\n      ps.on('error', e => { LOG('Error in RegexTransform'); j(e) })\n      xml.on('error', e => { LOG('Error in XML'); j(e) })\n      readable.on('error', e => { LOG('Error in Stream'); j(e) })\n      xml.on('end', r)\n    })\n\n    await new Promise(r => readable.end('</types>\\n', r))\n    await p\n  } catch (err) {\n    catcher(err)\n  }\n}\n\n/**\n * @typedef {Object} Config Configuration object.\n * @prop {string} [source] Input file from which to extract typedefs.\n * @prop {string} [destination=\"-\"] Output file to where to write XML. `-` will write to `stdout`.\n * @prop {Readable} [stream] An output stream to which to write instead of a location from `extract`.\n */\n\nexport default extractTypedef\n"],"file":"extract.js"}
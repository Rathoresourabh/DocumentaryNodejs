{"version":3,"sources":["../../src/bin/run.js"],"names":["replaceFile","stream","toc","out","Promise","r","j","s","ws","process","stdout","pipe","on","console","log","run","justToc","pt","PassThrough","pause","t","exit","resume"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,cAAc,OAAOC,MAAP,EAAeC,GAAf,EAAoBC,GAApB,KAA4B;AAC9C,QAAM,IAAIC,OAAJ,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,UAAMC,IAAI,4BAAoBL,GAApB,CAAV;AAEA,UAAMM,KAAKL,MAAM,2BAAkBA,GAAlB,CAAN,GAA+BM,QAAQC,MAAlD;AAEAT,WAAOU,IAAP,CAAYJ,CAAZ,EAAeI,IAAf,CAAoBH,EAApB;;AACA,QAAIL,GAAJ,EAAS;AACPK,SAAGI,EAAH,CAAM,OAAN,EAAe,MAAM;AACnBC,gBAAQC,GAAR,CAAY,UAAZ,EAAwBX,GAAxB;AACAE;AACD,OAHD;AAIAG,SAAGI,EAAH,CAAM,OAAN,EAAeN,CAAf;AACD,KAND,MAMO;AACLD;AACD;AACF,GAfK,CAAN;AAgBD,CAjBD;AAmBA;;;;;;;AAKe,eAAeU,GAAf,CAAmBd,MAAnB,EAA2BE,GAA3B,EAAgCa,OAAhC,EAAyC;AACtD,QAAMC,KAAK,IAAIC,mBAAJ,EAAX;AACAD,KAAGE,KAAH;AACAlB,SAAOU,IAAP,CAAYM,EAAZ;AACA,QAAMG,IAAI,MAAM,iBAAOnB,MAAP,CAAhB;;AACA,MAAIe,OAAJ,EAAa;AACXH,YAAQC,GAAR,CAAYM,CAAZ;AACAX,YAAQY,IAAR;AACD;;AACDJ,KAAGK,MAAH;AACA,QAAMtB,YAAYiB,EAAZ,EAAgBG,CAAhB,EAAmBjB,GAAnB,CAAN;AACD","sourcesContent":["import { getToc } from '../lib/Toc'\nimport { createWriteStream } from 'fs'\nimport createReplaceStream from '../lib/replace-stream'\nimport { PassThrough } from 'stream'\n\nconst replaceFile = async (stream, toc, out) => {\n  await new Promise((r, j) => {\n    const s = createReplaceStream(toc)\n\n    const ws = out ? createWriteStream(out) : process.stdout\n\n    stream.pipe(s).pipe(ws)\n    if (out) {\n      ws.on('close', () => {\n        console.log('Saved %s', out)\n        r()\n      })\n      ws.on('error', j)\n    } else {\n      r()\n    }\n  })\n}\n\n/**\n * @param {Readable} stream A readable stream.\n * @param {string} [out] Path to the output file.\n * @param {boolean} [justToc] Just print the TOC.\n */\nexport default async function run(stream, out, justToc) {\n  const pt = new PassThrough()\n  pt.pause()\n  stream.pipe(pt)\n  const t = await getToc(stream)\n  if (justToc) {\n    console.log(t)\n    process.exit()\n  }\n  pt.resume()\n  await replaceFile(pt, t, out)\n}\n"],"file":"run.js"}
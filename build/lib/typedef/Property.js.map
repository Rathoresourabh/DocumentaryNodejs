{"version":3,"sources":["../../../src/lib/typedef/Property.js"],"names":["Property","constructor","fromXML","content","name","string","boolean","opt","number","type","default","def","Error","description","trim","t","undefined","hasDefault","optional","toJSDoc","parentParam","nameWithDefault","dd","d","s","toProp","p","toParam"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,QAAN,CAAe;AACbC,gBAAc,CAAE;;AAChBC,UAAQC,OAAR,EAAiB;AAAEC,QAAF;AAAQC,UAAR;AAAgBC,WAAhB;AAAyBC,OAAzB;AAA8BC,UAA9B;AAAsCC,QAAtC;AAA4CC,aAASC;AAArD,GAAjB,EAA6E;AAC3E,QAAI,CAACP,IAAL,EAAW,MAAM,IAAIQ,KAAJ,CAAU,gCAAV,CAAN;AACX,SAAKR,IAAL,GAAYA,IAAZ;AACA,QAAID,OAAJ,EAAa,KAAKU,WAAL,GAAmBV,QAAQW,IAAR,EAAnB;AACb,UAAMC,IAAI,mBAAY;AAAEP,YAAF;AAAUH,YAAV;AAAkBC,aAAlB;AAA2BG;AAA3B,KAAZ,CAAV;AACA,SAAKA,IAAL,GAAYM,CAAZ;AACA,QAAIJ,QAAQK,SAAZ,EAAuB,KAAKC,UAAL,GAAkB,IAAlB;AACvB,QAAI,KAAKA,UAAT,EAAqB,KAAKP,OAAL,GAAeC,GAAf;AACrB,QAAIJ,OAAO,KAAKU,UAAhB,EAA4B,KAAKC,QAAL,GAAgB,IAAhB;AAC7B;;AACDC,UAAQC,WAAR,EAAqB;AACnB,UAAMC,kBAAkB,0BAAmB,KAAKjB,IAAxB,EAA8B,KAAKM,OAAnC,EAA4C,KAAKD,IAAjD,EAAuDW,WAAvD,CAAxB;AACA,UAAMhB,OAAO,KAAKc,QAAL,GAAiB,IAAGG,eAAgB,GAApC,GAAyCA,eAAtD;AACA,UAAMC,KAAK,KAAKT,WAAL,GAAoB,IAAG,KAAKA,WAAY,EAAxC,GAA4C,EAAvD;AACA,UAAMU,IAAI,KAAKN,UAAL,GAAmB,cAAa,KAAKP,OAAQ,KAA7C,GAAoD,EAA9D;AACA,UAAMc,IAAK,IAAG,KAAKf,IAAK,KAAIL,IAAK,GAAEkB,EAAG,GAAEC,CAAE,EAA1C;AACA,WAAOC,CAAP;AACD;;AACDC,WAAS;AACP,UAAMD,IAAI,KAAKL,OAAL,EAAV;AACA,UAAMO,IAAK,YAAWF,CAAE,EAAxB;AACA,WAAOE,CAAP;AACD;;AACDC,UAAQP,WAAR,EAAqB;AACnB,UAAMI,IAAI,KAAKL,OAAL,CAAaC,WAAb,CAAV;AACA,UAAMM,IAAK,aAAYF,CAAE,EAAzB;AACA,WAAOE,CAAP;AACD;;AA7BY;;eAgCA1B,Q","sourcesContent":["import { getPropType, getNameWithDefault } from '.'\n\nclass Property {\n  constructor() {}\n  fromXML(content, { name, string, boolean, opt, number, type, default: def }) {\n    if (!name) throw new Error('Property does not have a name.')\n    this.name = name\n    if (content) this.description = content.trim()\n    const t = getPropType({ number, string, boolean, type })\n    this.type = t\n    if (def !== undefined) this.hasDefault = true\n    if (this.hasDefault) this.default = def\n    if (opt || this.hasDefault) this.optional = true\n  }\n  toJSDoc(parentParam) {\n    const nameWithDefault = getNameWithDefault(this.name, this.default, this.type, parentParam)\n    const name = this.optional ? `[${nameWithDefault}]` : nameWithDefault\n    const dd = this.description ? ` ${this.description}` : ''\n    const d = this.hasDefault ? ` Default \\`${this.default}\\`.` : ''\n    const s = `{${this.type}} ${name}${dd}${d}`\n    return s\n  }\n  toProp() {\n    const s = this.toJSDoc()\n    const p = ` * @prop ${s}`\n    return p\n  }\n  toParam(parentParam) {\n    const s = this.toJSDoc(parentParam)\n    const p = ` * @param ${s}`\n    return p\n  }\n}\n\nexport default Property"],"file":"Property.js"}
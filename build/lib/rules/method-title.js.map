{"version":3,"sources":["../../../src/lib/rules/method-title.js"],"names":["LOG","replaceTitle","level","isAsync","method","returnType","title","t","trim","sig","endSig","nl","i","single","args","JSON","parse","length","lines","map","name","type","l","Object","keys","key","propType","defaultValue","line","join","repeat","n","nls","s","res","re","replacer","match","err","titleRule","replacement"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,MAAM,oBAAS,KAAT,CAAZ;;AAEO,MAAMC,eAAe,CAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,UAAzB,EAAqCC,KAArC,KAA+C;AACzE,QAAMC,IAAID,MAAME,IAAN,EAAV;AACA,QAAMC,MAAO,GAAEP,KAAM,IAAGC,UAAU,SAAV,GAAsB,GAAI,GAAEC,MAAO,GAA3D;AACA,QAAMM,SAAU,MAAKL,aAAaA,UAAb,GAA0B,MAAO,IAAtD;AACA,QAAMM,KAAK,OAAX;AACA,QAAMC,IAAI,cAAV;AACA,QAAMC,SAAU,GAAEJ,GAAI,GAAEC,MAAO,EAA/B;AACA,MAAI,CAACH,EAAEC,IAAF,EAAL,EAAe,OAAOK,MAAP;AACf;;AACA,QAAMC,OAAOC,KAAKC,KAAL,CAAWT,CAAX,CAAb;AACA,MAAI,CAACO,KAAKG,MAAV,EAAkB,OAAOJ,MAAP;AAElB,QAAMK,QAAQJ,KAAKK,GAAL,CAAS,CAAC,CAACC,IAAD,EAAOC,IAAP,CAAD,KAAkB;AACvC,QAAI,OAAOA,IAAP,IAAe,QAAnB,EAA6B;AAC3B,aAAQ,KAAID,IAAK,KAAIC,IAAK,KAA1B;AACD;;AACD,UAAMC,IAAIC,OAAOC,IAAP,CAAYH,IAAZ,EACPF,GADO,CACFM,GAAD,IAAS;AACZ;AACA,YAAM,CAACC,QAAD,EAAWC,YAAX,IAA2BN,KAAKI,GAAL,CAAjC,CAFY,CAGZ;;AACA,aAAQ,GAAEA,GAAI,KAAIC,QAAS,GAAEC,eAAgB,MAAKA,YAAa,EAAlC,GAAsC,EAAG,EAAtE;AACD,KANO,EAOPR,GAPO,CAOHS,QAAS,KAAIA,IAAK,KAPf,EAQPC,IARO,CAQD,GAAElB,EAAG,GAAEC,EAAEkB,MAAF,CAAS,CAAT,CAAY,EARlB,CAAV;AASA,UAAMC,IAAK,KAAIX,IAAK,QAAOT,EAAG,GAAEC,EAAEkB,MAAF,CAAS,CAAT,CAAY,GAAER,CAAE,GAAEX,EAAG,GAAEC,EAAEkB,MAAF,CAAS,CAAT,CAAY,QAAnE;AACA,WAAOC,CAAP;AACD,GAfa,CAAd;AAkBA,QAAMC,MAAO,GAAErB,EAAG,GAAEC,EAAEkB,MAAF,CAAS,CAAT,CAAY,EAAhC;AACA,QAAMG,IAAIf,MAAMW,IAAN,CAAWG,GAAX,CAAV;AAEA,QAAME,MAAO,GAAEzB,GAAI,KAAIuB,GAAI,GAAEC,CAAE,GAAEtB,EAAG,KAAID,MAAO,EAA/C;AACA,SAAOwB,GAAP;AACD,CAnCM;;;AAqCP,MAAMC,KAAK,qDAAX;;;AAEO,MAAMC,WAAW,CAACC,KAAD,EAAQnC,KAAR,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,UAAhC,EAA4CC,KAA5C,KAAsD;AAC5E,MAAI;AACF,UAAM4B,MAAMjC,aAAaC,KAAb,EAAoBC,OAApB,EAA6BC,MAA7B,EAAqCC,UAArC,EAAiDC,KAAjD,CAAZ;AACA,WAAO4B,GAAP;AACD,GAHD,CAGE,OAAOI,GAAP,EAAY;AACZtC,QAAI,kCAAJ;AACA,WAAOqC,KAAP;AACD;AACF,CARM;;;AAUP,MAAME,YAAY;AAChBJ,IADgB;AAEhBK,eAAaJ;AAFG,CAAlB;eAMeG,S","sourcesContent":["import { debuglog } from 'util'\n\nconst LOG = debuglog('doc')\n\nexport const replaceTitle = (level, isAsync, method, returnType, title) => {\n  const t = title.trim()\n  const sig = `${level} ${isAsync ? '`async ' : '`'}${method}(`\n  const endSig = `): ${returnType ? returnType : 'void'}\\``\n  const nl = '<br/>'\n  const i = '&nbsp;&nbsp;'\n  const single = `${sig}${endSig}`\n  if (!t.trim()) return single\n  /** @type {[]} */\n  const args = JSON.parse(t)\n  if (!args.length) return single\n\n  const lines = args.map(([name, type]) => {\n    if (typeof type == 'string') {\n      return `\\`${name}: ${type},\\``\n    }\n    const l = Object.keys(type)\n      .map((key) => {\n        // const isRequired = key.endsWith('?')\n        const [propType, defaultValue] = type[key]\n        // static?: boolean = true,\n        return `${key}: ${propType}${defaultValue ? ` = ${defaultValue}` : ''}`\n      })\n      .map(line => `\\`${line},\\``)\n      .join(`${nl}${i.repeat(2)}`)\n    const n = `\\`${name}: {\\`${nl}${i.repeat(2)}${l}${nl}${i.repeat(1)}\\`},\\``\n    return n\n  })\n\n\n  const nls = `${nl}${i.repeat(1)}`\n  const s = lines.join(nls)\n\n  const res = `${sig}\\`${nls}${s}${nl}\\`${endSig}`\n  return res\n}\n\nconst re = /```(#+)( async)? (\\w+)(?: => (.+)\\n)?([\\s\\S]*?)```/g\n\nexport const replacer = (match, level, isAsync, method, returnType, title) => {\n  try {\n    const res = replaceTitle(level, isAsync, method, returnType, title)\n    return res\n  } catch (err) {\n    LOG('could not parse the method title')\n    return match\n  }\n}\n\nconst titleRule = {\n  re,\n  replacement: replacer,\n}\n\nexport { re as methodTitleRe }\nexport default titleRule\n"],"file":"method-title.js"}
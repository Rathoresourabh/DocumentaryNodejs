{"version":3,"sources":["../../../src/lib/rules/index.js"],"names":["LOG","createTocRule","toc","re","replacement","commentRe","codeRe","innerCodeRe","commentRule","linkTitleRe","linkRe"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,MAAM,oBAAS,KAAT,CAAZ;;AAEO,MAAMC,gBAAiBC,GAAD,IAAS;AACpC,SAAO;AACLC,QAAI,WADC;AAELC,iBAAaF;AAFR,GAAP;AAID,CALM;;;AAOA,MAAMG,YAAY,qBAAlB;;AAEA,MAAMC,SAAS,mCAAf;;AAEA,MAAMC,cAAc,cAApB;;AAEA,MAAMC,cAAc;AACzBL,MAAIE,SADqB;;AAEzBD,gBAAc;AACZJ,QAAI,mBAAJ;AACA,WAAO,EAAP;AACD;;AALwB,CAApB;;AAQA,MAAMS,cAAc,4BAApB;;AACA,MAAMC,SAAS,iBAAf","sourcesContent":["import { debuglog } from 'util'\n\nconst LOG = debuglog('doc')\n\nexport const createTocRule = (toc) => {\n  return {\n    re: /^%TOC%$/gm,\n    replacement: toc,\n  }\n}\n\nexport const commentRe = /<!--[\\s\\S]*?-->\\n*/g\n\nexport const codeRe = /^```(`)?(\\w+)?\\n[\\s\\S]*?\\n```\\1/gm\n\nexport const innerCodeRe = /`[^`\\n]+?`/gm\n\nexport const commentRule = {\n  re: commentRe,\n  replacement() {\n    LOG('stripping comment')\n    return ''\n  },\n}\n\nexport const linkTitleRe = /\\[([^[\\n]+?)\\]\\((t|#+)\\)/gm\nexport const linkRe = /\\[(.+?)\\]\\(l\\)/g\n"],"file":"index.js"}